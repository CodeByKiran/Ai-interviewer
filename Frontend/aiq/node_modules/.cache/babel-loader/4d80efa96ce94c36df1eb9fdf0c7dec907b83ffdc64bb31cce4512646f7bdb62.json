{"ast":null,"code":"import React,{createContext,useState,useMemo}from'react';import{createTheme,ThemeProvider}from'@mui/material/styles';import CssBaseline from'@mui/material/CssBaseline';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const ColorModeContext=/*#__PURE__*/createContext({toggleColorMode:()=>{}});const ThemeContextProvider=_ref=>{let{children}=_ref;const[mode,setMode]=useState('light');const colorMode=useMemo(()=>({toggleColorMode:()=>{setMode(prevMode=>prevMode==='light'?'dark':'light');}}),[]);const theme=useMemo(()=>createTheme({palette:{mode}}),[mode]);return/*#__PURE__*/_jsx(ColorModeContext.Provider,{value:colorMode,children:/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),children]})});};export default ThemeContextProvider;","map":{"version":3,"names":["React","createContext","useState","useMemo","createTheme","ThemeProvider","CssBaseline","jsx","_jsx","jsxs","_jsxs","ColorModeContext","toggleColorMode","ThemeContextProvider","_ref","children","mode","setMode","colorMode","prevMode","theme","palette","Provider","value"],"sources":["C:/AIQ_workspace/aiq/src/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useMemo } from 'react';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\n\r\nexport const ColorModeContext = createContext({ toggleColorMode: () => {} });\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [mode, setMode] = useState('light');\r\n\r\n  const colorMode = useMemo(\r\n    () => ({\r\n      toggleColorMode: () => {\r\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const theme = useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode,\r\n        },\r\n      }),\r\n    [mode]\r\n  );\r\n\r\n  return (\r\n    <ColorModeContext.Provider value={colorMode}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        {children}\r\n      </ThemeProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,OAAO,KAAQ,OAAO,CAC/D,OAASC,WAAW,CAAEC,aAAa,KAAQ,sBAAsB,CACjE,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpD,MAAO,MAAM,CAAAC,gBAAgB,cAAGV,aAAa,CAAC,CAAEW,eAAe,CAAEA,CAAA,GAAM,CAAC,CAAE,CAAC,CAAC,CAE5E,KAAM,CAAAC,oBAAoB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAAC,OAAO,CAAC,CAEzC,KAAM,CAAAgB,SAAS,CAAGf,OAAO,CACvB,KAAO,CACLS,eAAe,CAAEA,CAAA,GAAM,CACrBK,OAAO,CAAEE,QAAQ,EAAMA,QAAQ,GAAK,OAAO,CAAG,MAAM,CAAG,OAAQ,CAAC,CAClE,CACF,CAAC,CAAC,CACF,EACF,CAAC,CAED,KAAM,CAAAC,KAAK,CAAGjB,OAAO,CACnB,IACEC,WAAW,CAAC,CACViB,OAAO,CAAE,CACPL,IACF,CACF,CAAC,CAAC,CACJ,CAACA,IAAI,CACP,CAAC,CAED,mBACER,IAAA,CAACG,gBAAgB,CAACW,QAAQ,EAACC,KAAK,CAAEL,SAAU,CAAAH,QAAA,cAC1CL,KAAA,CAACL,aAAa,EAACe,KAAK,CAAEA,KAAM,CAAAL,QAAA,eAC1BP,IAAA,CAACF,WAAW,GAAE,CAAC,CACdS,QAAQ,EACI,CAAC,CACS,CAAC,CAEhC,CAAC,CAED,cAAe,CAAAF,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}