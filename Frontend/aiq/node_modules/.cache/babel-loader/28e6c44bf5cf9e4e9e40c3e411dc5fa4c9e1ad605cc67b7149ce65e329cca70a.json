{"ast":null,"code":"const handleSubmit = async () => {\n  const formData = new URLSearchParams();\n  formData.append(\"name\", name);\n  formData.append(\"email\", email);\n  formData.append(\"message\", message);\n  try {\n    const response = await fetch('https://cors-anywhere.herokuapp.com/https://script.google.com/macros/s/AKfycbxmAQv0W4WD53h0HQNWwWn5u0Eh0g-dYk3WZN6RF6E/dev', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: formData.toString() // Updated to use formData directly\n    });\n    const text = await response.text(); // Get the response as text first\n    console.log('Response text:', text); // Log the response text to see what it contains\n\n    const data = JSON.parse(text); // Manually parse the response if it's valid JSON\n\n    if (response.ok) {\n      alert(data.message); // Show success message from response\n      setName('');\n      setEmail('');\n      setMessage('');\n    } else {\n      alert('Failed to send message: ' + data.message); // Show error message from response\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    alert('Error submitting form: ' + error.message);\n  }\n};","map":{"version":3,"names":["handleSubmit","formData","URLSearchParams","append","name","email","message","response","fetch","method","headers","body","toString","text","console","log","data","JSON","parse","ok","alert","setName","setEmail","setMessage","error"],"sources":["C:/AIQ_workspace/aiq/src/pages/Contact.js"],"sourcesContent":["const handleSubmit = async () => {\r\n  const formData = new URLSearchParams();\r\n  formData.append(\"name\", name);\r\n  formData.append(\"email\", email);\r\n  formData.append(\"message\", message);\r\n\r\n  try {\r\n    const response = await fetch('https://cors-anywhere.herokuapp.com/https://script.google.com/macros/s/AKfycbxmAQv0W4WD53h0HQNWwWn5u0Eh0g-dYk3WZN6RF6E/dev', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: formData.toString(), // Updated to use formData directly\r\n    });\r\n\r\n    const text = await response.text(); // Get the response as text first\r\n    console.log('Response text:', text);  // Log the response text to see what it contains\r\n\r\n    const data = JSON.parse(text); // Manually parse the response if it's valid JSON\r\n\r\n    if (response.ok) {\r\n      alert(data.message);  // Show success message from response\r\n      setName('');\r\n      setEmail('');\r\n      setMessage('');\r\n    } else {\r\n      alert('Failed to send message: ' + data.message);  // Show error message from response\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    alert('Error submitting form: ' + error.message);\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMC,QAAQ,GAAG,IAAIC,eAAe,CAAC,CAAC;EACtCD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEC,IAAI,CAAC;EAC7BH,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEE,KAAK,CAAC;EAC/BJ,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEG,OAAO,CAAC;EAEnC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4HAA4H,EAAE;MACzJC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEV,QAAQ,CAACW,QAAQ,CAAC,CAAC,CAAE;IAC7B,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;IACpCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC,CAAC,CAAE;;IAEtC,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,CAAC,CAAC;;IAE/B,IAAIN,QAAQ,CAACY,EAAE,EAAE;MACfC,KAAK,CAACJ,IAAI,CAACV,OAAO,CAAC,CAAC,CAAE;MACtBe,OAAO,CAAC,EAAE,CAAC;MACXC,QAAQ,CAAC,EAAE,CAAC;MACZC,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,MAAM;MACLH,KAAK,CAAC,0BAA0B,GAAGJ,IAAI,CAACV,OAAO,CAAC,CAAC,CAAE;IACrD;EACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;IACdV,OAAO,CAACU,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9BJ,KAAK,CAAC,yBAAyB,GAAGI,KAAK,CAAClB,OAAO,CAAC;EAClD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}