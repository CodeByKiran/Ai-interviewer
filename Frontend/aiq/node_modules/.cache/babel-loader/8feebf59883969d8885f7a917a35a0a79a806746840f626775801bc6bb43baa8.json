{"ast":null,"code":"var _jsxFileName = \"C:\\\\AIQ_workspace\\\\aiq\\\\src\\\\pages\\\\ResumeUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResumeUpload() {\n  _s();\n  const [resume, setResume] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const handleFileChange = e => {\n    setResume(e.target.files[0]);\n    setUploadStatus('');\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!resume) {\n      setUploadStatus('Please select a file first');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', resume);\n    try {\n      const response = await axios.post('http://localhost:8080/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setUploadStatus('Resume uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setUploadStatus('Failed to upload resume');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Your Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".pdf,.doc,.docx\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ResumeUpload, \"2zTFC0nJnfDziy5suc12kJJYiss=\");\n_c = ResumeUpload;\nexport default ResumeUpload;\nvar _c;\n$RefreshReg$(_c, \"ResumeUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ResumeUpload","_s","resume","setResume","uploadStatus","setUploadStatus","handleFileChange","e","target","files","handleUpload","preventDefault","formData","FormData","append","response","post","headers","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","_c","$RefreshReg$"],"sources":["C:/AIQ_workspace/aiq/src/pages/ResumeUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ResumeUpload() {\r\n  const [resume, setResume] = useState(null);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    setResume(e.target.files[0]);\r\n    setUploadStatus('');\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!resume) {\r\n      setUploadStatus('Please select a file first');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', resume);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      setUploadStatus('Resume uploaded successfully!');\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      setUploadStatus('Failed to upload resume');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Your Resume</h2>\r\n      <form onSubmit={handleUpload}>\r\n        <input type=\"file\" accept=\".pdf,.doc,.docx\" onChange={handleFileChange} />\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n      {uploadStatus && <p>{uploadStatus}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResumeUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,SAAS,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5BJ,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAMK,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI,CAACT,MAAM,EAAE;MACXG,eAAe,CAAC,4BAA4B,CAAC;MAC7C;IACF;IAEA,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,MAAM,CAAC;IAE/B,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;QAC1EK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFZ,eAAe,CAAC,+BAA+B,CAAC;IAClD,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7Cb,eAAe,CAAC,yBAAyB,CAAC;IAC5C;EACF,CAAC;EAED,oBACEN,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BzB,OAAA;MAAM0B,QAAQ,EAAEf,YAAa;MAAAU,QAAA,gBAC3BrB,OAAA;QAAO2B,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,iBAAiB;QAACC,QAAQ,EAAEtB;MAAiB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1EzB,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACNpB,YAAY,iBAAIL,OAAA;MAAAqB,QAAA,EAAIhB;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACvB,EAAA,CA1CQD,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AA4CrB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}