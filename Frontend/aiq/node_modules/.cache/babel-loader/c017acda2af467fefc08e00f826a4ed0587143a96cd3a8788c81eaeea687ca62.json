{"ast":null,"code":"var _jsxFileName = \"C:\\\\AIQ_workspace\\\\aiq\\\\src\\\\pages\\\\CameraPreview.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraPreview = () => {\n  _s();\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null); // Reference for the MediaRecorder\n  const [isCameraOn, setIsCameraOn] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n\n  // Function to start the camera\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        setIsCameraOn(true);\n      }\n    } catch (error) {\n      console.error('Error accessing the camera:', error);\n    }\n  };\n\n  // Function to stop the camera\n  const stopCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      const stream = videoRef.current.srcObject;\n      const tracks = stream.getTracks();\n      tracks.forEach(track => track.stop());\n      setIsCameraOn(false);\n      setIsRecording(false);\n    }\n  };\n\n  // Function to start recording\n  const startRecording = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n      mediaRecorderRef.current = new MediaRecorder(videoRef.current.srcObject, {\n        mimeType: 'video/webm'\n      });\n      mediaRecorderRef.current.ondataavailable = event => {\n        if (event.data.size > 0) {\n          setRecordedChunks(prev => [...prev, event.data]);\n        }\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    }\n  };\n\n  // Function to stop recording\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n\n  // Function to download the recorded video\n  const downloadRecording = () => {\n    const blob = new Blob(recordedChunks, {\n      type: 'video/webm'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'recording.webm';\n    a.click();\n    URL.revokeObjectURL(url);\n    setRecordedChunks([]); // Reset chunks after download\n  };\n  useEffect(() => {\n    // Cleanup function to stop the camera and recording when component unmounts\n    return () => {\n      stopCamera();\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true,\n      style: styles.video,\n      className: isCameraOn ? 'active' : 'inactive'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.buttonContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCamera,\n        style: {\n          ...styles.button,\n          backgroundColor: '#4CAF50'\n        } // Green color\n        ,\n        disabled: isCameraOn,\n        children: \"Start Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopCamera,\n        style: {\n          ...styles.button,\n          backgroundColor: '#f44336'\n        } // Red color\n        ,\n        disabled: !isCameraOn || isRecording // Fixed the condition\n        ,\n        children: \"Stop Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        style: {\n          ...styles.button,\n          backgroundColor: '#4CAF50'\n        } // Green color\n        ,\n        disabled: !isCameraOn || isRecording // Fixed the condition\n        ,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        style: {\n          ...styles.button,\n          backgroundColor: '#FFA500'\n        } // Orange color\n        ,\n        disabled: !isRecording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadRecording,\n        style: {\n          ...styles.button,\n          backgroundColor: '#a881af'\n        } // download button\n        ,\n        disabled: recordedChunks.length === 0,\n        children: \"Download Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraPreview, \"/c1eJt++kgsLWM4ybNsJjUUO0VA=\");\n_c = CameraPreview;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100vh',\n    fontFamily: 'Arial, sans-serif'\n  },\n  video: {\n    width: '100%',\n    maxWidth: '1000px',\n    border: '1px solid #ddd',\n    borderRadius: '18px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n    marginBottom: '20px'\n  },\n  buttonContainer: {\n    display: 'flex',\n    gap: '10px'\n  },\n  button: {\n    padding: '6px 12px',\n    fontSize: '16px',\n    borderRadius: '4px',\n    border: 'none',\n    cursor: 'pointer',\n    backgroundColor: '#4CAF50',\n    color: 'white'\n  }\n};\nexport default CameraPreview;\nvar _c;\n$RefreshReg$(_c, \"CameraPreview\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","CameraPreview","_s","videoRef","mediaRecorderRef","isCameraOn","setIsCameraOn","isRecording","setIsRecording","recordedChunks","setRecordedChunks","startCamera","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","stopCamera","tracks","getTracks","forEach","track","stop","startRecording","MediaRecorder","mimeType","ondataavailable","event","data","size","prev","start","stopRecording","downloadRecording","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","style","styles","container","children","ref","autoPlay","playsInline","className","fileName","_jsxFileName","lineNumber","columnNumber","buttonContainer","onClick","button","backgroundColor","disabled","length","_c","display","flexDirection","alignItems","justifyContent","height","fontFamily","width","maxWidth","border","borderRadius","boxShadow","marginBottom","gap","padding","fontSize","cursor","color","$RefreshReg$"],"sources":["C:/AIQ_workspace/aiq/src/pages/CameraPreview.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst CameraPreview = () => {\r\n  const videoRef = useRef(null);\r\n  const mediaRecorderRef = useRef(null); // Reference for the MediaRecorder\r\n  const [isCameraOn, setIsCameraOn] = useState(false);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [recordedChunks, setRecordedChunks] = useState([]);\r\n\r\n  // Function to start the camera\r\n  const startCamera = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        setIsCameraOn(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error accessing the camera:', error);\r\n    }\r\n  };\r\n\r\n  // Function to stop the camera\r\n  const stopCamera = () => {\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      const stream = videoRef.current.srcObject;\r\n      const tracks = stream.getTracks();\r\n      tracks.forEach(track => track.stop());\r\n      setIsCameraOn(false);\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  // Function to start recording\r\n  const startRecording = () => {\r\n    if (videoRef.current && videoRef.current.srcObject) {\r\n      mediaRecorderRef.current = new MediaRecorder(videoRef.current.srcObject, {\r\n        mimeType: 'video/webm',\r\n      });\r\n\r\n      mediaRecorderRef.current.ondataavailable = (event) => {\r\n        if (event.data.size > 0) {\r\n          setRecordedChunks(prev => [...prev, event.data]);\r\n        }\r\n      };\r\n\r\n      mediaRecorderRef.current.start();\r\n      setIsRecording(true);\r\n    }\r\n  };\r\n\r\n  // Function to stop recording\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  // Function to download the recorded video\r\n  const downloadRecording = () => {\r\n    const blob = new Blob(recordedChunks, { type: 'video/webm' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'recording.webm';\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n    setRecordedChunks([]); // Reset chunks after download\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Cleanup function to stop the camera and recording when component unmounts\r\n    return () => {\r\n      stopCamera();\r\n      if (mediaRecorderRef.current) {\r\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <video\r\n        ref={videoRef}\r\n        autoPlay\r\n        playsInline\r\n        style={styles.video}\r\n        className={isCameraOn ? 'active' : 'inactive'}\r\n      />\r\n      <div style={styles.buttonContainer}>\r\n        <button\r\n          onClick={startCamera}\r\n          style={{ ...styles.button, backgroundColor: '#4CAF50' }} // Green color\r\n          disabled={isCameraOn}\r\n        >\r\n          Start Camera\r\n        </button>\r\n        <button\r\n          onClick={stopCamera}\r\n          style={{ ...styles.button, backgroundColor: '#f44336' }} // Red color\r\n          disabled={!isCameraOn || isRecording} // Fixed the condition\r\n        >\r\n          Stop Camera\r\n        </button>\r\n        <button\r\n          onClick={startRecording}\r\n          style={{ ...styles.button, backgroundColor: '#4CAF50' }} // Green color\r\n          disabled={!isCameraOn || isRecording} // Fixed the condition\r\n        >\r\n          Start Recording\r\n        </button>\r\n        <button\r\n          onClick={stopRecording}\r\n          style={{ ...styles.button, backgroundColor: '#FFA500' }} // Orange color\r\n          disabled={!isRecording}\r\n        >\r\n          Stop Recording\r\n        </button>\r\n        <button\r\n          onClick={downloadRecording}\r\n          style={{ ...styles.button, backgroundColor: '#a881af' }} // download button\r\n          disabled={recordedChunks.length === 0}\r\n        >\r\n          Download Recording\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100vh',\r\n    fontFamily: 'Arial, sans-serif',\r\n  },\r\n  video: {\r\n    width: '100%',\r\n    maxWidth: '1000px',\r\n    border: '1px solid #ddd',\r\n    borderRadius: '18px',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n    marginBottom: '20px',\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    gap: '10px',\r\n  },\r\n  button: {\r\n    padding: '6px 12px',\r\n    fontSize: '16px',\r\n    borderRadius: '4px',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n  },\r\n};\r\n\r\nexport default CameraPreview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}