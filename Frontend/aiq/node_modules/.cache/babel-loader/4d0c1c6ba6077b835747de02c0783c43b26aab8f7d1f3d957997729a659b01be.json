{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ai-interviewer\\\\Frontend\\\\aiq\\\\src\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useMemo } from 'react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ColorModeContext = /*#__PURE__*/createContext({\n  toggleColorMode: () => {}\n});\nconst ThemeContextProvider = ({\n  children\n}) => {\n  _s();\n  const [mode, setMode] = useState('light');\n  const colorMode = useMemo(() => ({\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n    }\n  }), []);\n  const theme = useMemo(() => createTheme({\n    palette: {\n      mode\n    }\n  }), [mode]);\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: colorMode,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeContextProvider, \"d4Wg7a/ehJsJwQbDoYd9huIJFWY=\");\n_c = ThemeContextProvider;\nexport default ThemeContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useMemo","createTheme","ThemeProvider","CssBaseline","jsxDEV","_jsxDEV","ColorModeContext","toggleColorMode","ThemeContextProvider","children","_s","mode","setMode","colorMode","prevMode","theme","palette","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Ai-interviewer/Frontend/aiq/src/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useMemo } from 'react';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\n\r\nexport const ColorModeContext = createContext({ toggleColorMode: () => {} });\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [mode, setMode] = useState('light');\r\n\r\n  const colorMode = useMemo(\r\n    () => ({\r\n      toggleColorMode: () => {\r\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const theme = useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode,\r\n        },\r\n      }),\r\n    [mode]\r\n  );\r\n\r\n  return (\r\n    <ColorModeContext.Provider value={colorMode}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        {children}\r\n      </ThemeProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAC/D,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,OAAO,MAAMC,gBAAgB,gBAAGR,aAAa,CAAC;EAAES,eAAe,EAAEA,CAAA,KAAM,CAAC;AAAE,CAAC,CAAC;AAE5E,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMc,SAAS,GAAGb,OAAO,CACvB,OAAO;IACLO,eAAe,EAAEA,CAAA,KAAM;MACrBK,OAAO,CAAEE,QAAQ,IAAMA,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;IAClE;EACF,CAAC,CAAC,EACF,EACF,CAAC;EAED,MAAMC,KAAK,GAAGf,OAAO,CACnB,MACEC,WAAW,CAAC;IACVe,OAAO,EAAE;MACPL;IACF;EACF,CAAC,CAAC,EACJ,CAACA,IAAI,CACP,CAAC;EAED,oBACEN,OAAA,CAACC,gBAAgB,CAACW,QAAQ;IAACC,KAAK,EAAEL,SAAU;IAAAJ,QAAA,eAC1CJ,OAAA,CAACH,aAAa;MAACa,KAAK,EAAEA,KAAM;MAAAN,QAAA,gBAC1BJ,OAAA,CAACF,WAAW;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACdb,QAAQ;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEhC,CAAC;AAACZ,EAAA,CA9BIF,oBAAoB;AAAAe,EAAA,GAApBf,oBAAoB;AAgC1B,eAAeA,oBAAoB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}